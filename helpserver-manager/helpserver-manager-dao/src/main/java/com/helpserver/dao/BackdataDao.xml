<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.helpserver.dao.BackdataDao" >
  <resultMap id="BaseResultMap" type="com.helpserver.pojo.Backdata" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="allMoney" property="allmoney" jdbcType="INTEGER" />
    <result column="allMen" property="allmen" jdbcType="INTEGER" />
    <result column="allOrders" property="allorders" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="INTEGER" />
    <result column="month" property="month" jdbcType="INTEGER" />
    <result column="monthMoney" property="monthmoney" jdbcType="INTEGER" />
    <result column="monthMen" property="monthmen" jdbcType="INTEGER" />
    <result column="monthOrders" property="monthorders" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, allMoney, allMen, allOrders, year, month, monthMoney, monthMen, monthOrders, 
      time
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.helpserver.pojo.BackdataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from backdata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,allMoney,allMen,allOrders,year,month,monthMoney,monthMen,monthOrders,time
    from backdata
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from backdata
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.helpserver.pojo.BackdataExample" >
    delete from backdata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.helpserver.pojo.Backdata" >
    insert into backdata (id, allMoney, allMen, 
      allOrders, year, month, 
      monthMoney, monthMen, monthOrders, 
      time)
    values (#{id,jdbcType=INTEGER}, #{allmoney,jdbcType=INTEGER}, #{allmen,jdbcType=INTEGER}, 
      #{allorders,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, 
      #{monthmoney,jdbcType=INTEGER}, #{monthmen,jdbcType=INTEGER}, #{monthorders,jdbcType=INTEGER}, 
      #{time,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.helpserver.pojo.Backdata" >
    insert into backdata
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="allmoney != null" >
        allMoney,
      </if>
      <if test="allmen != null" >
        allMen,
      </if>
      <if test="allorders != null" >
        allOrders,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="monthmoney != null" >
        monthMoney,
      </if>
      <if test="monthmen != null" >
        monthMen,
      </if>
      <if test="monthorders != null" >
        monthOrders,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="allmoney != null" >
        #{allmoney,jdbcType=INTEGER},
      </if>
      <if test="allmen != null" >
        #{allmen,jdbcType=INTEGER},
      </if>
      <if test="allorders != null" >
        #{allorders,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        #{month,jdbcType=INTEGER},
      </if>
      <if test="monthmoney != null" >
        #{monthmoney,jdbcType=INTEGER},
      </if>
      <if test="monthmen != null" >
        #{monthmen,jdbcType=INTEGER},
      </if>
      <if test="monthorders != null" >
        #{monthorders,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.helpserver.pojo.BackdataExample" resultType="java.lang.Integer" >
    select count(*) from backdata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update backdata
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.allmoney != null" >
        allMoney = #{record.allmoney,jdbcType=INTEGER},
      </if>
      <if test="record.allmen != null" >
        allMen = #{record.allmen,jdbcType=INTEGER},
      </if>
      <if test="record.allorders != null" >
        allOrders = #{record.allorders,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.monthmoney != null" >
        monthMoney = #{record.monthmoney,jdbcType=INTEGER},
      </if>
      <if test="record.monthmen != null" >
        monthMen = #{record.monthmen,jdbcType=INTEGER},
      </if>
      <if test="record.monthorders != null" >
        monthOrders = #{record.monthorders,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update backdata
    set id = #{record.id,jdbcType=INTEGER},
      allMoney = #{record.allmoney,jdbcType=INTEGER},
      allMen = #{record.allmen,jdbcType=INTEGER},
      allOrders = #{record.allorders,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      month = #{record.month,jdbcType=INTEGER},
      monthMoney = #{record.monthmoney,jdbcType=INTEGER},
      monthMen = #{record.monthmen,jdbcType=INTEGER},
      monthOrders = #{record.monthorders,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.helpserver.pojo.Backdata" >
    update backdata
    <set >
      <if test="allmoney != null" >
        allMoney = #{allmoney,jdbcType=INTEGER},
      </if>
      <if test="allmen != null" >
        allMen = #{allmen,jdbcType=INTEGER},
      </if>
      <if test="allorders != null" >
        allOrders = #{allorders,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="monthmoney != null" >
        monthMoney = #{monthmoney,jdbcType=INTEGER},
      </if>
      <if test="monthmen != null" >
        monthMen = #{monthmen,jdbcType=INTEGER},
      </if>
      <if test="monthorders != null" >
        monthOrders = #{monthorders,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.helpserver.pojo.Backdata" >
    update backdata
    set allMoney = #{allmoney,jdbcType=INTEGER},
      allMen = #{allmen,jdbcType=INTEGER},
      allOrders = #{allorders,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      monthMoney = #{monthmoney,jdbcType=INTEGER},
      monthMen = #{monthmen,jdbcType=INTEGER},
      monthOrders = #{monthorders,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>